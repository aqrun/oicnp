//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.10

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};
use validator::Validate;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Deserialize, Serialize, Default, Validate)]
#[sea_orm(table_name = "roles")]
pub struct Model {
    #[sea_orm(primary_key)]
    #[serde(rename(deserialize = "roleId", serialize = "roleId"))]
    pub role_id: i64,
    pub vid: String,
    pub name: String,
    pub weight: i32,
    pub scope: String,
    pub status: String,
    pub remark: String,
    #[serde(rename(deserialize = "createdAt", serialize = "createdAt"))]
    pub created_at: DateTime,
    #[serde(rename(deserialize = "updatedAt", serialize = "updatedAt"))]
    pub updated_at: Option<DateTime>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::user_role_map::Entity")]
    UserRole,
}

impl Related<super::user_role_map::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::UserRole.def()
    }
}
