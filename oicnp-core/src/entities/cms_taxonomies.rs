//! SeaORM Entity. Generated by sea-orm-codegen 0.9.2

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "cms_taxonomies")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub tid: String,
    pub vid: Option<String>,
    pub pid: Option<String>,
    pub name: Option<String>,
    pub description: Option<String>,
    pub description_format: Option<String>,
    pub weight: Option<i32>,
}

#[derive(Copy, Clone, Debug, EnumIter)]
pub enum Relation {}

impl RelationTrait for Relation {
    fn def(&self) -> RelationDef {
        panic!("No RelationDef")
    }
}

impl Related<super::cms_nodes::Entity> for Entity {
    fn to() -> RelationDef {
        super::cms_node_taxonomies_map::Relation::Node.def()
    }

    fn via() -> Option<RelationDef> {
        Some(super::cms_node_taxonomies_map::Relation::Taxonomy.def().rev())
    }
}

impl ActiveModelBehavior for ActiveModel {}
